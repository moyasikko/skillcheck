/*******************************************************************************
* インクルードファイル
*******************************************************************************/
#include "enemy.h"
#include "common.h"
#include "item.h"

/*******************************************************************************
* 構造体定義
*******************************************************************************/
typedef struct EnemyGenerator_tag
{
	int frame;
	float x, y;
	int life;
	ENEMY_TYPE Type;
	ENEMY_MOVETYPE Movetype;
	ENEMY_SHOTTYPE Shottype;
	ITEM_TYPE Itemtype;
}EnemyGenerator;

/*******************************************************************************
* グローバル変数
*******************************************************************************/
//初期化でも0代入
static const EnemyGenerator ENEMY_GENERATOR[] = {
	{300, -ENEMY_SIZE * 0.5f, 100, 10, TYPE1, MOVETYPE3, SHOTTYPE_MAX,	ITEMTYPE1},
	{330, -ENEMY_SIZE * 0.5f, 100, 10, TYPE1, MOVETYPE3, SHOTTYPE_MAX,	ITEMTYPE1},
	{360, -ENEMY_SIZE * 0.5f, 100, 10, TYPE1, MOVETYPE3, SHOTTYPE_MAX,	ITEMTYPE1},
	{390, -ENEMY_SIZE * 0.5f, 100, 10, TYPE1, MOVETYPE3, SHOTTYPE_MAX,	ITEMTYPE1},
	{420, -ENEMY_SIZE * 0.5f, 100, 10, TYPE1, MOVETYPE3, SHOTTYPE_MAX,	ITEMTYPE1},
	{450, -ENEMY_SIZE * 0.5f, 100, 10, TYPE1, MOVETYPE3, SHOTTYPE_MAX,	ITEMTYPE1},
	{480, -ENEMY_SIZE * 0.5f, 100, 10, TYPE1, MOVETYPE3, SHOTTYPE_MAX,	ITEMTYPE1},
	{510, -ENEMY_SIZE * 0.5f, 100, 10, TYPE1, MOVETYPE3, SHOTTYPE_MAX,	ITEMTYPE1},
	{540, -ENEMY_SIZE * 0.5f, 100, 10, TYPE1, MOVETYPE3, SHOTTYPE_MAX,	ITEMTYPE1},
	{570, -ENEMY_SIZE * 0.5f, 100, 10, TYPE1, MOVETYPE3, SHOTTYPE_MAX,	ITEMTYPE1},

	{ 900, GAME_WIDTH + ENEMY_SIZE * 0.5f, 150, 10, TYPE1, MOVETYPE4, SHOTTYPE_MAX,	ITEMTYPE1},
	{ 930, GAME_WIDTH + ENEMY_SIZE * 0.5f, 150, 10, TYPE1, MOVETYPE4, SHOTTYPE_MAX,	ITEMTYPE1},
	{ 960, GAME_WIDTH + ENEMY_SIZE * 0.5f, 150, 10, TYPE1, MOVETYPE4, SHOTTYPE_MAX,	ITEMTYPE1},
	{ 990, GAME_WIDTH + ENEMY_SIZE * 0.5f, 150, 10, TYPE1, MOVETYPE4, SHOTTYPE_MAX,	ITEMTYPE1},
	{1020, GAME_WIDTH + ENEMY_SIZE * 0.5f, 150, 10, TYPE1, MOVETYPE4, SHOTTYPE_MAX,	ITEMTYPE1},
	{1050, GAME_WIDTH + ENEMY_SIZE * 0.5f, 150, 10, TYPE1, MOVETYPE4, SHOTTYPE_MAX,	ITEMTYPE1},
	{1080, GAME_WIDTH + ENEMY_SIZE * 0.5f, 150, 10, TYPE1, MOVETYPE4, SHOTTYPE_MAX,	ITEMTYPE1},
	{1110, GAME_WIDTH + ENEMY_SIZE * 0.5f, 150, 10, TYPE1, MOVETYPE4, SHOTTYPE_MAX,	ITEMTYPE1},
	{1140, GAME_WIDTH + ENEMY_SIZE * 0.5f, 150, 10, TYPE1, MOVETYPE4, SHOTTYPE_MAX,	ITEMTYPE1},
	{1170, GAME_WIDTH + ENEMY_SIZE * 0.5f, 150, 10, TYPE1, MOVETYPE4, SHOTTYPE_MAX,	ITEMTYPE1},

	{1500, -ENEMY_SIZE * 0.5f, 200, 10, TYPE1, MOVETYPE3, SHOTTYPE_MAX,	ITEMTYPE1},
	{1530, -ENEMY_SIZE * 0.5f, 200, 10, TYPE1, MOVETYPE3, SHOTTYPE_MAX,	ITEMTYPE1},
	{1560, -ENEMY_SIZE * 0.5f, 200, 10, TYPE1, MOVETYPE3, SHOTTYPE_MAX,	ITEMTYPE1},
	{1590, -ENEMY_SIZE * 0.5f, 200, 10, TYPE1, MOVETYPE3, SHOTTYPE_MAX,	ITEMTYPE1},
	{1620, -ENEMY_SIZE * 0.5f, 200, 10, TYPE1, MOVETYPE3, SHOTTYPE_MAX,	ITEMTYPE1},
	{1650, -ENEMY_SIZE * 0.5f, 200, 10, TYPE1, MOVETYPE3, SHOTTYPE_MAX,	ITEMTYPE1},
	{1680, -ENEMY_SIZE * 0.5f, 200, 10, TYPE1, MOVETYPE3, SHOTTYPE_MAX,	ITEMTYPE1},
	{1710, -ENEMY_SIZE * 0.5f, 200, 10, TYPE1, MOVETYPE3, SHOTTYPE_MAX,	ITEMTYPE1},
	{1740, -ENEMY_SIZE * 0.5f, 200, 10, TYPE1, MOVETYPE3, SHOTTYPE_MAX,	ITEMTYPE1},
	{1770, -ENEMY_SIZE * 0.5f, 200, 10, TYPE1, MOVETYPE3, SHOTTYPE_MAX,	ITEMTYPE1},

	{2100, (GAME_WIDTH * 0.5f) + (rand() % (int)(GAME_WIDTH * 0.5f) - (GAME_WIDTH * 0.25f)), -ENEMY_SIZE / 2, 10, TYPE1, MOVETYPE5, SHOTTYPE1,	ITEMTYPE1},
	{2130, (GAME_WIDTH * 0.5f) + (rand() % (int)(GAME_WIDTH * 0.5f) - (GAME_WIDTH * 0.25f)), -ENEMY_SIZE / 2, 10, TYPE1, MOVETYPE5, SHOTTYPE1,	ITEMTYPE1},
	{2160, (GAME_WIDTH * 0.5f) + (rand() % (int)(GAME_WIDTH * 0.5f) - (GAME_WIDTH * 0.25f)), -ENEMY_SIZE / 2, 10, TYPE1, MOVETYPE5, SHOTTYPE1,	ITEMTYPE1},
	{2190, (GAME_WIDTH * 0.5f) + (rand() % (int)(GAME_WIDTH * 0.5f) - (GAME_WIDTH * 0.25f)), -ENEMY_SIZE / 2, 10, TYPE1, MOVETYPE5, SHOTTYPE1,	ITEMTYPE1},
	{2220, (GAME_WIDTH * 0.5f) + (rand() % (int)(GAME_WIDTH * 0.5f) - (GAME_WIDTH * 0.25f)), -ENEMY_SIZE / 2, 10, TYPE1, MOVETYPE5, SHOTTYPE1,	ITEMTYPE1},
	{2250, (GAME_WIDTH * 0.5f) + (rand() % (int)(GAME_WIDTH * 0.5f) - (GAME_WIDTH * 0.25f)), -ENEMY_SIZE / 2, 10, TYPE1, MOVETYPE5, SHOTTYPE1,	ITEMTYPE1},
	{2280, (GAME_WIDTH * 0.5f) + (rand() % (int)(GAME_WIDTH * 0.5f) - (GAME_WIDTH * 0.25f)), -ENEMY_SIZE / 2, 10, TYPE1, MOVETYPE5, SHOTTYPE1,	ITEMTYPE1},
	{2310, (GAME_WIDTH * 0.5f) + (rand() % (int)(GAME_WIDTH * 0.5f) - (GAME_WIDTH * 0.25f)), -ENEMY_SIZE / 2, 10, TYPE1, MOVETYPE5, SHOTTYPE1,	ITEMTYPE1},
	{2340, (GAME_WIDTH * 0.5f) + (rand() % (int)(GAME_WIDTH * 0.5f) - (GAME_WIDTH * 0.25f)), -ENEMY_SIZE / 2, 10, TYPE1, MOVETYPE5, SHOTTYPE1,	ITEMTYPE1},
	{2370, (GAME_WIDTH * 0.5f) + (rand() % (int)(GAME_WIDTH * 0.5f) - (GAME_WIDTH * 0.25f)), -ENEMY_SIZE / 2, 10, TYPE1, MOVETYPE5, SHOTTYPE1,	ITEMTYPE1},

	{2700,  GAME_WIDTH * 0.25f,		 -ENEMY_SIZE / 2, 100, TYPE2, MOVETYPE6, SHOTTYPE3,	ITEMTYPE1},
	{2700, (GAME_WIDTH * 0.25f) * 3, -ENEMY_SIZE / 2, 100, TYPE2, MOVETYPE6, SHOTTYPE4,	ITEMTYPE1},

	{2800,				-ENEMY_SIZE / 2, -ENEMY_SIZE / 2, 10, TYPE3, MOVETYPE7, SHOTTYPE_MAX,	ITEMTYPE1},
	{2830, GAME_WIDTH +  ENEMY_SIZE / 2, -ENEMY_SIZE / 2, 10, TYPE3, MOVETYPE8, SHOTTYPE_MAX,	ITEMTYPE1},
	{2860,				-ENEMY_SIZE / 2, -ENEMY_SIZE / 2, 10, TYPE3, MOVETYPE7, SHOTTYPE_MAX,	ITEMTYPE1},
	{2890, GAME_WIDTH +  ENEMY_SIZE / 2, -ENEMY_SIZE / 2, 10, TYPE3, MOVETYPE8, SHOTTYPE_MAX,	ITEMTYPE1},
	{2920,				-ENEMY_SIZE / 2, -ENEMY_SIZE / 2, 10, TYPE3, MOVETYPE7, SHOTTYPE_MAX,	ITEMTYPE1},
	{2950, GAME_WIDTH +  ENEMY_SIZE / 2, -ENEMY_SIZE / 2, 10, TYPE3, MOVETYPE8, SHOTTYPE_MAX,	ITEMTYPE1},
	{2980,				-ENEMY_SIZE / 2, -ENEMY_SIZE / 2, 10, TYPE3, MOVETYPE7, SHOTTYPE_MAX,	ITEMTYPE1},
	{3010, GAME_WIDTH +  ENEMY_SIZE / 2, -ENEMY_SIZE / 2, 10, TYPE3, MOVETYPE8, SHOTTYPE_MAX,	ITEMTYPE1},
	{3040,				-ENEMY_SIZE / 2, -ENEMY_SIZE / 2, 10, TYPE3, MOVETYPE7, SHOTTYPE_MAX,	ITEMTYPE1},
	{3070, GAME_WIDTH +  ENEMY_SIZE / 2, -ENEMY_SIZE / 2, 10, TYPE3, MOVETYPE8, SHOTTYPE_MAX,	ITEMTYPE1},
	{3100,				-ENEMY_SIZE / 2, -ENEMY_SIZE / 2, 10, TYPE3, MOVETYPE7, SHOTTYPE_MAX,	ITEMTYPE1},
	{3130, GAME_WIDTH +  ENEMY_SIZE / 2, -ENEMY_SIZE / 2, 10, TYPE3, MOVETYPE8, SHOTTYPE_MAX,	ITEMTYPE1},
	{3160,				-ENEMY_SIZE / 2, -ENEMY_SIZE / 2, 10, TYPE3, MOVETYPE7, SHOTTYPE_MAX,	ITEMTYPE1},
	{3190, GAME_WIDTH +  ENEMY_SIZE / 2, -ENEMY_SIZE / 2, 10, TYPE3, MOVETYPE8, SHOTTYPE_MAX,	ITEMTYPE1},
	{3220,				-ENEMY_SIZE / 2, -ENEMY_SIZE / 2, 10, TYPE3, MOVETYPE7, SHOTTYPE_MAX,	ITEMTYPE1},
	{3250, GAME_WIDTH +  ENEMY_SIZE / 2, -ENEMY_SIZE / 2, 10, TYPE3, MOVETYPE8, SHOTTYPE_MAX,	ITEMTYPE1},
	{3280,				-ENEMY_SIZE / 2, -ENEMY_SIZE / 2, 10, TYPE3, MOVETYPE7, SHOTTYPE_MAX,	ITEMTYPE1},
	{3310, GAME_WIDTH +  ENEMY_SIZE / 2, -ENEMY_SIZE / 2, 10, TYPE3, MOVETYPE8, SHOTTYPE_MAX,	ITEMTYPE1},
	{3340,				-ENEMY_SIZE / 2, -ENEMY_SIZE / 2, 10, TYPE3, MOVETYPE7, SHOTTYPE_MAX,	ITEMTYPE1},
	{3470, GAME_WIDTH +  ENEMY_SIZE / 2, -ENEMY_SIZE / 2, 10, TYPE3, MOVETYPE8, SHOTTYPE_MAX,	ITEMTYPE1},
};
static const int ENEMY_GENERATOR_MAX = sizeof(ENEMY_GENERATOR) / sizeof(ENEMY_GENERATOR[0]);
static int EnemyGenerator_arrow = 0;
static int EnemyGenerator_FrameCount = 0;

void EnemyGenerator_Init(void)
{
	EnemyGenerator_FrameCount = 0;
}

void EnemyGenerator_Uninit(void)
{
	
}

void EnemyGenerator_Update(void)
{
	for (; EnemyGenerator_arrow < ENEMY_GENERATOR_MAX; EnemyGenerator_arrow++)
	{
		if (ENEMY_GENERATOR[EnemyGenerator_arrow].frame == EnemyGenerator_FrameCount)
		{
			Enemy_Create(ENEMY_GENERATOR[EnemyGenerator_arrow].x,
				ENEMY_GENERATOR[EnemyGenerator_arrow].y,
				ENEMY_GENERATOR[EnemyGenerator_arrow].life,
				ENEMY_GENERATOR[EnemyGenerator_arrow].Type,
				ENEMY_GENERATOR[EnemyGenerator_arrow].Movetype,
				ENEMY_GENERATOR[EnemyGenerator_arrow].Shottype,
				ENEMY_GENERATOR[EnemyGenerator_arrow].Itemtype);
			continue;
		}
		else if (ENEMY_GENERATOR[EnemyGenerator_arrow].frame>EnemyGenerator_FrameCount)
		{
			break;
		}
	}
	EnemyGenerator_FrameCount++;
	//if (g_FrameCount >= 300 && g_FrameCount % 60 == 0 && g_FrameCount <= 600)
	//{//敵発生
	//		Enemy_Create(GAME_WIDTH/2, 0, 10, MOVETYPE6, SHOTTYPE_MAX);
	//}
	//g_FrameCount++;
}